//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub uid: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::projects::Entity")]
    Projects,
    #[sea_orm(has_many = "super::user_projects::Entity")]
    UserProjects,
    #[sea_orm(has_many = "super::commits::Entity")]
    Commits,
    #[sea_orm(has_many = "super::versions::Entity")]
    Versions,
}

impl Related<super::projects::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Projects.def()
    }
}

impl Related<super::user_projects::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserProjects.def()
    }
}

impl Related<super::commits::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Commits.def()
    }
}

impl Related<super::versions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Versions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
